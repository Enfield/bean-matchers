var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":45,"id":280,"methods":[{"el":20,"sc":3,"sl":12},{"el":44,"sc":3,"sl":22}],"name":"DefaultTypeBasedValueGenerator","sl":5}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_1":{"methods":[{"sl":22}],"name":"testHasValidBeanEqualsExcluding","pass":true,"statements":[{"sl":23},{"sl":24},{"sl":27},{"sl":28}]},"test_10":{"methods":[{"sl":22}],"name":"testHasValidBeanToString","pass":true,"statements":[{"sl":23},{"sl":24},{"sl":25},{"sl":27},{"sl":28},{"sl":30},{"sl":31},{"sl":33},{"sl":34}]},"test_106":{"methods":[{"sl":22}],"name":"testHasValidGettersAndSettersFor","pass":true,"statements":[{"sl":23},{"sl":24},{"sl":27},{"sl":28}]},"test_118":{"methods":[{"sl":22}],"name":"testHasValidGettersAndSettersExcluding","pass":true,"statements":[{"sl":23},{"sl":24},{"sl":27},{"sl":28}]},"test_137":{"methods":[{"sl":22}],"name":"shouldDelegateGeneration","pass":true,"statements":[{"sl":23},{"sl":24},{"sl":25}]},"test_14":{"methods":[{"sl":12},{"sl":22}],"name":"shouldThrowExceptionOnBeanWithPropertyNeedingCustomValueGenerator","pass":true,"statements":[{"sl":16},{"sl":17},{"sl":18},{"sl":19},{"sl":23},{"sl":24},{"sl":27},{"sl":30},{"sl":33},{"sl":36}]},"test_140":{"methods":[{"sl":22}],"name":"testHasValidBeanEqualsFor","pass":true,"statements":[{"sl":23},{"sl":24},{"sl":27},{"sl":28}]},"test_145":{"methods":[{"sl":22}],"name":"canRegisterCustomValueGenerator","pass":true,"statements":[{"sl":23},{"sl":24},{"sl":25}]},"test_15":{"methods":[{"sl":22}],"name":"testHasValidGettersAndSetters","pass":true,"statements":[{"sl":23},{"sl":24},{"sl":25},{"sl":27},{"sl":28},{"sl":30},{"sl":31},{"sl":33},{"sl":34}]},"test_159":{"methods":[{"sl":22}],"name":"shouldCreateArrayGivenTypeIsArray","pass":true,"statements":[{"sl":23},{"sl":24},{"sl":27},{"sl":30},{"sl":33},{"sl":34}]},"test_24":{"methods":[{"sl":22}],"name":"testHasValidBeanHashCode","pass":true,"statements":[{"sl":23},{"sl":24},{"sl":25},{"sl":27},{"sl":28},{"sl":30},{"sl":31},{"sl":33},{"sl":34}]},"test_34":{"methods":[{"sl":22}],"name":"testBeanHasValidGettersAndSettersFor","pass":true,"statements":[{"sl":23},{"sl":24},{"sl":27},{"sl":28}]},"test_41":{"methods":[{"sl":22}],"name":"shouldThrowExceptionWhenNoGeneratorRegisteredForTypeAndTypeIsFinal","pass":true,"statements":[{"sl":23},{"sl":24},{"sl":27},{"sl":30},{"sl":33},{"sl":36}]},"test_80":{"methods":[{"sl":22}],"name":"shouldUseNonFinalGeneratorWhenNoGeneratorRegisteredForTypeAndTypeIsNotFinal","pass":true,"statements":[{"sl":23},{"sl":24},{"sl":27},{"sl":28}]},"test_84":{"methods":[{"sl":22}],"name":"testBeanHasValidGettersAndSettersExcluding","pass":true,"statements":[{"sl":23},{"sl":24},{"sl":27},{"sl":28}]},"test_85":{"methods":[{"sl":22}],"name":"testHasValidBeanEquals","pass":true,"statements":[{"sl":23},{"sl":24},{"sl":25},{"sl":27},{"sl":28},{"sl":30},{"sl":31},{"sl":33},{"sl":34}]},"test_86":{"methods":[{"sl":22}],"name":"shouldUseEnumGeneratorGivenTypeIsEnum","pass":true,"statements":[{"sl":23},{"sl":24},{"sl":27},{"sl":30},{"sl":31}]},"test_90":{"methods":[{"sl":22}],"name":"testHasValidBeanEqualsOnNonReflectedEquals","pass":true,"statements":[{"sl":23},{"sl":24},{"sl":25}]},"test_96":{"methods":[{"sl":22}],"name":"testBeanHasValidGettersAndSetters","pass":true,"statements":[{"sl":23},{"sl":24},{"sl":25},{"sl":27},{"sl":28},{"sl":30},{"sl":31},{"sl":33},{"sl":34}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [14], [], [], [], [14], [14], [14], [14], [], [], [41, 86, 85, 96, 34, 118, 137, 145, 1, 159, 80, 106, 84, 10, 140, 15, 90, 14, 24], [41, 86, 85, 96, 34, 118, 137, 145, 1, 159, 80, 106, 84, 10, 140, 15, 90, 14, 24], [41, 86, 85, 96, 34, 118, 137, 145, 1, 159, 80, 106, 84, 10, 140, 15, 90, 14, 24], [85, 96, 137, 145, 10, 15, 90, 24], [], [41, 86, 85, 96, 34, 118, 1, 159, 80, 106, 84, 10, 140, 15, 14, 24], [85, 96, 34, 118, 1, 80, 106, 84, 10, 140, 15, 24], [], [41, 86, 85, 96, 159, 10, 15, 14, 24], [86, 85, 96, 10, 15, 24], [], [41, 85, 96, 159, 10, 15, 14, 24], [85, 96, 159, 10, 15, 24], [], [41, 14], [], [], [], [], [], [], [], [], []]
